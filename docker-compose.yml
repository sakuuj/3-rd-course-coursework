services:
  mongo-0:
    image: bitnami/mongodb:7.0.15
    restart: unless-stopped
    healthcheck:
      test: mongosh --eval 'use coursework' --eval 'db.runCommand("ping").ok' --quiet
      start_period: 15s
    environment:
      MONGODB_ADVERTISED_HOSTNAME: mongo-0
      MONGODB_ROOT_PASSWORD: mongo123
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_KEY: replicasetkey123
      MONGODB_EXTRA_FLAGS: --oplogSize=256
      MONGODB_DATABASE: coursework
    volumes:
      - 'mongodb_master_data:/bitnami'
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ulimits:
      nofile:
        soft: 100000
        hard: 100000
    networks:
      - net
  mongo:
    image: bitnami/mongodb:7.0.15
    depends_on:
      - mongo-0
    restart: unless-stopped
    environment:
      MONGODB_INITIAL_PRIMARY_HOST: mongo-0
      MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD: mongo123
      MONGODB_REPLICA_SET_MODE: secondary
      MONGODB_REPLICA_SET_KEY: replicasetkey123
      MONGODB_EXTRA_FLAGS: --oplogSize=256
      MONGODB_DATABASE: coursework
    networks:
      - net

  cfg-examples:
    build:
      dockerfile: Dockerfile-cfg-examples
    restart: unless-stopped
    depends_on:
      mongo-0:
        condition: service_healthy
    ports:
      - "127.0.0.1:7000:7000"
    networks:
      - net

  cfg-processor:
    build:
      dockerfile: Dockerfile-cfg-processor
    restart: unless-stopped
    ports:
      - "127.0.0.1:7001:8081"

networks:
  net:

volumes:
  mongodb_master_data:
    driver: local